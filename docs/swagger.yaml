basePath: /api/v1
definitions:
  get_task.Response:
    properties:
      codeToSolve:
        type: string
      responseInfo:
        $ref: '#/definitions/response_info.ResponseInfo'
    type: object
  response_info.ResponseInfo:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
  skips.Request:
    properties:
      programmingLanguage:
        type: string
      skipsNumber:
        minimum: 0
        type: integer
      sourceCode:
        type: string
    required:
    - programmingLanguage
    - skipsNumber
    - sourceCode
    type: object
  skips.Response:
    properties:
      responseInfo:
        $ref: '#/definitions/response_info.ResponseInfo'
      taskAlias:
        type: string
    type: object
  skips_check.ClientRequest:
    properties:
      answers:
        items:
          type: string
        type: array
      taskAlias:
        type: string
    required:
    - answers
    - taskAlias
    type: object
  skips_check.ServerResponse:
    properties:
      responseInfo:
        $ref: '#/definitions/response_info.ResponseInfo'
      submissionId:
        type: integer
    type: object
  submission_status.ServerResponse:
    properties:
      IsCorrect:
        type: string
      hints:
        items:
          type: string
        type: array
      responseInfo:
        $ref: '#/definitions/response_info.ResponseInfo'
    type: object
  task_status.StatusResponse:
    properties:
      error:
        type: string
      message:
        type: string
      result:
        type: string
      status:
        type: string
    type: object
host: localhost:8082
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API for the Codular project, providing functionality to generate code
    skips, retrieve tasks, and check task status.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Codular API
  version: "1.0"
paths:
  /skips/generate:
    post:
      consumes:
      - application/json
      description: Processes the provided source code with a specified number of skips,
        generates a unique alias, and saves initial status to Redis. Returns the task
        alias for status checking.
      parameters:
      - description: Source code, number of skips, and programming language
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/skips.Request'
      produces:
      - application/json
      responses:
        "200":
          description: Example response" Example({"responseInfo":{"status":"OK"},"taskAlias":"abc123"})
          schema:
            $ref: '#/definitions/skips.Response'
        "400":
          description: Invalid request or empty body
          schema:
            $ref: '#/definitions/skips.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/skips.Response'
      summary: Generate and save skips for code
      tags:
      - Skips
  /skips/solve:
    post:
      consumes:
      - application/json
      description: Receives user answers for a given task alias, saves the submission,
        and asynchronously processes it.
      parameters:
      - description: Task alias and user's answers
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/skips_check.ClientRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Example response for successful submission" Example({"responseInfo":{"status":"OK"},"submissionId":123})
          schema:
            $ref: '#/definitions/skips_check.ServerResponse'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/skips_check.ServerResponse'
        "404":
          description: Task not found
          schema:
            $ref: '#/definitions/skips_check.ServerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/skips_check.ServerResponse'
      summary: Submit answers for a skips task
      tags:
      - Skips
  /submission-status/{submission_id}:
    get:
      description: Returns the current status of a submission by its ID, including
        any hints if available.
      parameters:
      - description: Submission ID
        in: path
        name: submission_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'Example response for failure with hints" Example({"responseInfo":{"status":"OK"},"IsCorrect":"Failed","hints":["1''th
            skip: Hint message 1","3''th skip: Hint message 2"]})'
          schema:
            $ref: '#/definitions/submission_status.ServerResponse'
        "400":
          description: Invalid submission ID format
          schema:
            $ref: '#/definitions/submission_status.ServerResponse'
        "404":
          description: Submission not found
          schema:
            $ref: '#/definitions/submission_status.ServerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/submission_status.ServerResponse'
      summary: Get submission status
      tags:
      - Submissions
  /task-status/{alias}:
    get:
      description: Returns the current status of a task by its alias.
      parameters:
      - description: Task alias
        in: path
        name: alias
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Example response" Example({"status":"Done","result":"processed
            code"})
          schema:
            $ref: '#/definitions/task_status.StatusResponse'
        "400":
          description: Alias parameter is missing
          schema:
            $ref: '#/definitions/task_status.StatusResponse'
        "404":
          description: Task not found
          schema:
            $ref: '#/definitions/task_status.StatusResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/task_status.StatusResponse'
      summary: Get task status
      tags:
      - Skips
  /tasks/{alias}:
    get:
      description: Retrieves the processed code associated with the given alias from
        the database.
      parameters:
      - description: Task alias
        in: path
        name: alias
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Example response" Example({"responseInfo":{"status":"OK"},"codeToSolve":"processed
            code"})
          schema:
            $ref: '#/definitions/get_task.Response'
        "400":
          description: Task alias is empty
          schema:
            $ref: '#/definitions/get_task.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/get_task.Response'
      summary: Get task by alias
      tags:
      - Tasks
swagger: "2.0"
