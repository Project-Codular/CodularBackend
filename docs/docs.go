// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/skips/generate": {
            "post": {
                "description": "Processes the provided source code with a specified number of skips, generates a unique alias, and saves it to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Skips"
                ],
                "summary": "Generate and save skips for code",
                "parameters": [
                    {
                        "description": "Source code and number of skips",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/skips.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated and saved skips",
                        "schema": {
                            "$ref": "#/definitions/skips.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid request or empty body",
                        "schema": {
                            "$ref": "#/definitions/skips.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/skips.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "response_info.ResponseInfo": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "skips.Request": {
            "type": "object",
            "required": [
                "skipsNumber",
                "sourceCode"
            ],
            "properties": {
                "skipsNumber": {
                    "type": "integer",
                    "minimum": 0
                },
                "sourceCode": {
                    "type": "string"
                }
            }
        },
        "skips.Response": {
            "type": "object",
            "properties": {
                "processedCode": {
                    "type": "string"
                },
                "processedCodeId": {
                    "type": "string"
                },
                "responseInfo": {
                    "$ref": "#/definitions/response_info.ResponseInfo"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8082",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Codular API",
	Description:      "API for the Codular project, providing functionality to generate and manage code skips.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
