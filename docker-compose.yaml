version: '3.8'

services:
  db:
    image: postgres:17-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d:ro
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: project_codular_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - codular_network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: codular_backend
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8082:8082"
    environment:
      ENV: local
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: admin_codular
      DB_PASSWORD: superAdmin
      DB_NAME: project_codular_db
      DB_SUPERUSER: postgres
      DB_SUPERUSER_PASSWORD: postgres
    command: ["/wait-for-it.sh", "db:5432", "-t", "60", "--", "./codular-backend"]
    restart: unless-stopped
    networks:
      - codular_network

volumes:
  postgres_data:

networks:
  codular_network:
    driver: bridge