version: '3.8'

services:
  db:
    image: postgres:17-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d:ro
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - codular_network
    # Ensure scripts are executable
    command: >
      sh -c "
        chmod +x /docker-entrypoint-initdb.d/*.sh;
        docker-entrypoint.sh postgres
      "
    # Database port is not exposed externally

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: codular_backend
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8082:8082"
    environment:
      ENV: production
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      DB_SUPERUSER: ${POSTGRES_USER}
      DB_SUPERUSER_PASSWORD: ${POSTGRES_PASSWORD}
    command: ["/app/wait-for-it.sh", "db:5432", "-t", "60", "--", "/app/codular-backend"]
    networks:
      - codular_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  codular_network:
    driver: bridge